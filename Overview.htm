<style type="text/css">
.pln {
 color:#000
}
@media screen {
 .str {
  color:#080
 }
 .kwd {
  color:#008
 }
 .com {
  color:#800
 }
 .typ {
  color:#606
 }
 .lit {
  color:#066
 }
 .clo,
 .opn,
 .pun {
  color:#660
 }
 .tag {
  color:#008
 }
 .atn {
  color:#606
 }
 .atv {
  color:#080
 }
 .dec,
 .var {
  color:#606
 }
 .fun {
  color:red
 }
}
@media print,projection {
 .kwd,
 .tag,
 .typ {
  font-weight:700
 }
 .str {
  color:#060
 }
 .kwd {
  color:#006
 }
 .com {
  color:#600;
  font-style:italic
 }
 .typ {
  color:#404
 }
 .lit {
  color:#044
 }
 .clo,
 .opn,
 .pun {
  color:#440
 }
 .tag {
  color:#006
 }
 .atn {
  color:#404
 }
 .atv {
  color:#060
 }
}
pre {
  font-family: monospace,monospace;
  font-size: 1em;
}
.prettyprint {
 background: #eee !important;
 border: 1px solid #d6d6d6 !important;
}
pre.prettyprint {
 padding:2px;
 border:1px solid #888
}
ol.linenums {
 margin-top:0;
 margin-bottom:0
}
li.L0,
li.L1,
li.L2,
li.L3,
li.L5,
li.L6,
li.L7,
li.L8 {
 list-style-type:none
}
li.L1,
li.L3,
li.L5,
li.L7,
li.L9 {
 background:#eee
}
</style>
<h1>Dragon Tutorials - Part 1: Overview</h1>
<img src="https://img.imageupload.net/2020/07/16/carbon1.png" width="100%" height="300px">
<p>Dragon is an innovative, general-purpose, interactive, 
object-oriented and dynamic programming language. It was created by 
Aavesh Jilani in 2018. Dragon is influenced by Lua, Python, Ruby, Java, QML and Ring.</p>
<h2>Why to Learn Dragon?</h2>
<p>Dragon is a high-level, interpreted, interactive and object-oriented 
programming language (it is not pure OOP). Dragon is designed to be highly readable. It uses 
English keywords frequently where as other languages use punctuation, 
and it has fewer syntactical constructions than other languages.</p>
<p>I will list down some of the key advantages of 
learning Dragon:</p>
<ul class="list">
<li><b>Dragon is Interpreted</b> − Dragon is processed at runtime by 
the interpreter. You do not need to compile your program before 
executing it. Interpreter translates the program
one statement at a time. This is similar to PERL, Python and Ruby.</li>
<li><b>Dragon is Object-Oriented</b> − Dragon supports Object-Oriented style or technique of programming that encapsulates code within objects.</li>
<li><b>Dragon is a Beginner's Language</b> − Dragon is a great 
language for the beginner-level programmers and supports the development of a wide range of applications.</li>
<li><b>Dragon is Memory Efficient</b> − No intermediate object code generated,
hence are memory efficient.</li>
<li><b>Dragon is Easy to Debug</b> − Continues translating the program
until the first error is met, in which case it stops. Hence
debugging is easy.</li>
</ul>
<h2>Characteristics of Dragon</h2>
<p>Following are important characteristics of Dragon −</p>
<ul class="list">
<li>It supports functional and structured programming methods as well as OOP.</li>
<li>It can be used to build console and GUI applications.</li>
<li>It executes as fast as Java and its syntax is a easy as Python.</li>
<li>It provides very high-level dynamic data types and supports dynamic type checking.</li>
<li>It works in Windows, Linux and Android Environment.</li>
<li>It is of two type: Native and Non-Native.</li>
</ul>
<h2>Hello World using Dragon.</h2>
<p>Just to give you a little excitement about Dragon, I'm going to give 
you a small conventional Dragon Hello World program., You can try it 
using Demo link.</p>
<pre class="prettyprint notranslate prettyprinted" style="">
<span class="kwd">show</span><span class="pln"> </span><span class="str">"Hello, Dragon!"</span></pre>
<h2>Features of Dragon</h2>
<p>I'm going to list few of the features of Dragon here:</p>
<ul class="list">
<li><b>Easy-to-learn</b> − Dragon has few keywords, simple structure,
 and a clearly defined syntax. This allows the student to pick up the 
language quickly.</li>
<li><b>Easy-to-read</b> − Dragon code is more clearly defined and visible to the eyes.</li>
<li><b>Easy-to-maintain</b> − Dragon's source code is fairly easy-to-maintain.</li>
<li><b>A broad standard library</b> − Dragon's bulk of the library is very portable and cross-platform compatible on Linux, Windows, and Android.</li>
<li><b>Interactive Mode</b> − Dragon has support for an interactive mode which allows interactive testing and debugging of snippets of code.</li>
<li><b>Portable</b> − Dragon can run on a wide variety of hardware platforms and has the same interface on all platforms.</li>
<li><b>Extendable</b> − You can add low-level modules to the Dragon interpreter. These modules enable programmers to add to or customize their tools to be more efficient.</li>
<li><b>Databases</b> − Dragon provides interfaces to all major commercial databases.</li>
<li><b>GUI Programming</b> − Dragon supports GUI applications that 
can be created and ported to many system calls, libraries and windows 
systems.</li>
</ul>
<h2>Audience</h2>
<p>This tutorial can also be used to learn Dragon programming language from scratch as it the target audience are thsoe who do not know to code in Dragon.</p>
<h2>Prerequisites</h2>
<p>You should have a basic understanding of Computer Programming terminologies. A basic understanding of any of the programming language especially Python is a plus.</p>
<p>In the next tutorial, I will guide you on how you will setup your Dragon environment.</p>